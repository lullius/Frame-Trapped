<UserControl x:Class="FrameTrapped.StreetFighterLibrary.Views.ComboableMovesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:converters="clr-namespace:FrameTrapped.Common.Converters;assembly=FrameTrapped.Common"
             Margin="5">
    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/MergedCommonResources.xaml"/>
    </UserControl.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <converters:BoolToCollapsedConverter x:Key="BoolToVisibleConverter" />
            <converters:BoolToVisibleConverter x:Key="BoolToCollapsedConverter" />
        </DockPanel.Resources>

        <!-- Main moves list -->
        <HeaderedContentControl DockPanel.Dock="Left" Visibility="{Binding Path=BaseMoveExists,Converter={StaticResource BoolToCollapsedConverter}}">
            <HeaderedContentControl.Template>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" />
                        <ContentPresenter />
                    </DockPanel>
                </ControlTemplate>
            </HeaderedContentControl.Template>
            <HeaderedContentControl.Header>
                <DockPanel Background="{DynamicResource AccentColorBrush}">
                    <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{DynamicResource MoveList}" DockPanel.Dock="Left"/>
                    <!--<ToggleButton Content="Group by Move Type" Margin="2" DockPanel.Dock="Right" IsChecked="{Binding MovesGrouped}" cal:Message.Attach="ToggleGroup" />-->
                    <Separator Margin="5,0,0,0"/>
                </DockPanel>
            </HeaderedContentControl.Header>
            <DataGrid x:Name="Items" 
                ItemsSource="{Binding Items}" 
                AutoGenerateColumns="False"
                IsReadOnly="True"
                FrozenColumnCount="2"  
                AlternationCount="2" AlternatingRowBackground="Black"
                Tag="{Binding DataContext, ElementName=LayoutRoot}" 
                SelectionMode="Single" CanUserResizeRows="False"
                SelectedItem="{Binding SelectedMove, Mode=OneWayToSource}">
                <DataGrid.GroupStyle>
                    <!-- Style for groups at top level. -->
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Margin" Value="0,0,0,5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True">
                                                <Expander.Header>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                                        <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                                    </StackPanel>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                    <!-- Style for groups under the top level. -->
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel Background="LightBlue">
                                    <TextBlock Text="{Binding Path=ItemCount}"/>
                                    <TextBlock Text="{Binding Path=Name}" Margin="30,0,0,0" Width="100"/>
                                </DockPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                    <DataGridTextColumn Header="Move Type" Binding="{Binding Path=MoveType}"  />
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
                                    <MenuItem Header="Add To Player 1 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 1)" />
                                    <MenuItem Header="Add To Player 2 Time Line" cal:Message.Attach="AddCommandToTimeline($dataContext, 2)" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </HeaderedContentControl>
    
        <Grid DockPanel.Dock="Left"  Visibility="{Binding Path=BaseMoveExists,Converter={StaticResource BoolToVisibleConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <HeaderedContentControl Grid.Row="0">
                <HeaderedContentControl.Template>
                    <ControlTemplate TargetType="HeaderedContentControl">
                        <DockPanel>
                            <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" />
                            <ContentPresenter />
                        </DockPanel>
                    </ControlTemplate>
                </HeaderedContentControl.Template>
                <HeaderedContentControl.Header>
                    <DockPanel Background="{DynamicResource AccentColorBrush}">
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{Binding BaseMove.Name}" DockPanel.Dock="Left"/>
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{DynamicResource LinkableMoves}" DockPanel.Dock="Left"/>
                    </DockPanel>
                </HeaderedContentControl.Header>
                <DataGrid
                    x:Name="LinkableMoves" 
                    ItemsSource="{Binding LinkableMoves}"
                    AutoGenerateColumns="False"
                    IsReadOnly="True"
                    FrozenColumnCount="2"  
                    AlternationCount="2" AlternatingRowBackground="Black"
                    Tag="{Binding DataContext, ElementName=LayoutRoot}" 
                    SelectionMode="Single" CanUserResizeRows="False"
                    SelectedItem="{Binding SelectedMove, Mode=OneWayToSource}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                        <DataGridTextColumn Header="Move Type" Binding="{Binding Path=MoveType}" />
                    </DataGrid.Columns>
                </DataGrid>
            </HeaderedContentControl>
            <HeaderedContentControl Grid.Row="1">
                <HeaderedContentControl.Template>
                    <ControlTemplate TargetType="HeaderedContentControl">
                        <DockPanel>
                            <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" />
                            <ContentPresenter />
                        </DockPanel>
                    </ControlTemplate>
                </HeaderedContentControl.Template>
                <HeaderedContentControl.Header>
                    <DockPanel Background="{DynamicResource AccentColorBrush}">
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{Binding BaseMove.Name}" DockPanel.Dock="Left"/>
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="{DynamicResource CancelableMoves}" DockPanel.Dock="Left"/>
                    </DockPanel>
                </HeaderedContentControl.Header>
                <DataGrid x:Name="CancelableMoves" 
                    ItemsSource="{Binding CancelableMoves}" 
                    AutoGenerateColumns="False"
                    IsReadOnly="True"
                    FrozenColumnCount="2"  
                    AlternationCount="2" AlternatingRowBackground="Black"
                    Tag="{Binding DataContext, ElementName=LayoutRoot}" 
                    SelectionMode="Single" CanUserResizeRows="False"
                    SelectedItem="{Binding SelectedMove, Mode=OneWayToSource}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                        <DataGridTextColumn Header="Move Type" Binding="{Binding Path=MoveType}"  />
                    </DataGrid.Columns>
                </DataGrid>
            </HeaderedContentControl>
        </Grid>
        <ContentControl cal:View.Model="{Binding ComboableMoves}" Margin="10,0,0,0" />
    </DockPanel>
</UserControl>
